;GMX pic view 640*200*2 color per byte from 16;Просмотр картинок на расширенном экране ZS Scorpion GMX			DEVICE ZXSPECTRUM256			SLOT 1			PAGE 5			org     #6000start_GMXPV			ld 		hl,fontTemp ;перенесём шрифт на место в банк 0			ld 		de,font			ld 		bc,2048			ldir            ld      a,#10            ld      (#5b5c),a ;sys var            call    renewcat            ld      hl,arrowd+48            ld      de,arrowd+48+1            ld      bc,48            ld      a,4  ;цвет стрелки            ld      (hl),a            ldirwait ;ожидание клавиши            halt			call    printFI ;печать инфро						ld      a,(keyLast) ;предыдущая нажатая клавиша			ld		b,a			ld 		a,(23556) ;сист. переменная нажатая клавиша 			ld 		c,a					ld 		(keyLast),a ;запомним клавишу			cp		#ff ;если сейчас ничего не нажато			jr		nz,wait1			xor		a			ld		(keyDelayF),a ;обнулим флаг задержки			jr      wait ;и снова на ожиданиеwait1			ld		a,c			cp		b			jr		nz,waitPass ;если нажата первый раз, пропустим задержку			ld 		a,(keyDelayF)			or		a			jr		nz,waitPass ;если всё ещё нажата и была пауза, пропустим			;waitDelay					ld      a,(keyRepeat) ;пауза			ld b,awaitDelay            halt			ld 		a,(23556) ;сист. переменная нажатая клавиша 			ld 		(keyLast),a ;запомним клавишу			cp		#ff ;если сейчас ничего не нажато			jr		nz,waitDelay1			xor		a			ld		(keyDelayF),a ;обнулим флаг задержки			jr      wait ;и снова на ожидание	waitDelay1			djnz waitDelay			ld		a,1			ld		(keyDelayF),a ;установить флаг была пауза			jr      wait ;и снова на ожидание						waitPass			ld      a,c ;вспомним клавишу            cp 		"E"            jp      z,exit            cp 		#36            jp      z,down            cp 		#37            jp      z,up            cp 		#0d            jp      z,view ;enter            cp 		"R"            jp      z,readc            cp 		"1"            jp      z,driveA ;1            cp 		"A"            jp      z,driveA ;A			            cp 		"2"            jp      z,driveB ;2            cp 		"B"            jp      z,driveB ;B            cp 		"3"            jp      z,driveC ;3            cp 		"C"            jp      z,driveC ;C            cp 		"4"            jr      z,driveD ;4            cp 		"D"            jr      z,driveD ;D            cp 		"S"            jp      z,slidesh ;S            cp 		#35            jp      z,left            cp 		#38            jp      z,right            cp 		"I"             jp      z,ShowInfo ;I            jp      waitexit            xor     a  ;0 page            call    pag_on            call    gmxscroff            call    gmxpagoff            ld      a,#10            ld      (#5b5c),a ;sys var			LD 		HL,10072			EXX			;ld		bc,0            retdriveA            ld      a,0            ld      (#5d19) ,a            ld      c,1            call    #3d13            ld      c,#18            call    #3d13            call    renewcat            jp      waitdriveB            ld      a,1            ld      (#5d19) ,a            ld      c,1            call    #3d13            ld      c,#18            call    #3d13            call    renewcat            jp      waitdriveC            ld      a,2            ld      (#5d19) ,a            ld      c,1            call    #3d13            ld      c,#18            call    #3d13            call    renewcat            jp      waitdriveD            ld      a,3            ld      (#5d19) ,a            ld      c,1            call    #3d13            ld      c,#18            call    #3d13            call    renewcat            jp      waitdown ; вниз по каталогу            ld     a,(files)            ld     c,a			ld     a,(shiftcat)			ld     b,a 		            ld     a,(curfile)            inc    a            cp     c            jp     nc,wait ;выход если дошли до конца            ld     (curfile),a			sub b        ;    ld     a,(cursor)            cp     files_view ;не пора ли сдвинуться вниз всему каталогу            jr     c,downE            inc b            ld   a,b            ld     (shiftcat),adownE            call   printcat            jp     waitup ; ; вверх по каталогу            ld     a,(curfile)            or     a            jp     z,wait            dec    a            ld     (curfile),a			ld     c,a            ld     a,(shiftcat)			ld b,a			ld a,c			sub b			cp files_view			jr c,upE			dec b			ld a,b            ld     (shiftcat),aupE            call   printcat            jp     waitleft ; на страницу вверх            ld     a,(curfile)            or     a            jp     z,wait            sub    files_view-1            jr     nc,left02            xor    aleft02            ld     (curfile),a            ld     c,a			;проверка сдвига			ld     a,(shiftcat)			ld b,a			ld     a,c			sub b			;cp files_view			jr nc,leftE ;листать не надо						ld a,b			sub files_view-1			jr nc,left03			xor aleft03            ld     (shiftcat),aleftE			            call   printcat            jp     waitright; на страницу вниз            ld     a,(files) ;всего			or     a            jp     z,wait            ld     c,a            ld     a,(curfile) ;текущий            add    a,files_view-1 ;листаем вперёд            cp     c            jr     c,right01 ;если не дошли до конца            ld     a,(files) ;иначе на последний файл            dec    aright01            ld     (curfile),a			;проверка сдвига, листать каталог или нет			ld     a,(files)			ld c,a			cp files_view+1			jr c,rightE ;выход если файлов меньше 25            ld     a,(shiftcat)			ld b,a			ld     a,(curfile) ;текущий			sub b			cp files_view			jr c,rightE ;если не пора пролистать на страницу			ld a,files_view-1			add b			cp c ;если больше чем всего файлов			jr c,right04			ld a,c			sub files_view ;тогда максимум файлов - 24			jr right05right04			ld b,a ;и если до последнего файла не меньше 24х			ld a,c			sub b			cp files_view			ld a,b			jr nc,right05			ld a,c			sub files_view ;тогда максимум файлов - 24right05            ld     (shiftcat),a ;новое смещение от начала каталогаrightE            call   printcat            jp     waitreadc     ;reload catalog            call   renewcat            jp     waitrenewcat   ;reprint all            call    cls            xor     a            ld      (curfile),a ;каталог перелистнуть в начало            ld      (shiftcat),a             ld      hl,title            call    print            ;call    printFI			            call    readcat            ld      a,(files)            or      a            jr      nz,renew01            ld      hl,mesnofile            call    printrenew01            call    printcat            xor     a            ld      (finmem),a ;no files in mem            retShowInfo ;показать инфо о файле			ld 		a,(files)			or     a            jp     z,wait			ld a,1			ld (FlagInfo),a			call   viewsl			ld      hl,mesPressAKey            call    print            jp     waitv			view ;просмотр картинки            ld     a,(files)            or     a      ;no files?            jp     z,wait            call   viewsl            call   arrowdf            jp     waitv		viewsl			ld 		a,(curfile)			ld 		bc,cat			ld      l,a			ld 		h,0            add    hl,hl ;2			add    hl,hl ;4			add    hl,hl ;8			add    hl,hl ;16			add hl,bc				push hl ;запомним указатель на имя файла в каталоге			pop ix            ;обнулим переменные            ld     a,firstpag            ld     (curpicpag),a            xor    a            ld     (allpicpag),a            ld     (fcolor),a			ld	   (fcolorOff),a			ld	   (FlagFlic),a            ;call   clearpag  ;очистить первые 2 страницы            ld     hl,#c000            ld     (curhl),hl            ld     de,#8000            ld     (curde),de            ld     de,#0000            ld     (curscrl),de ;скрол            ld     (curvposit),de ;позиция			ld	   (vsize),de ;ширина			ld	   (hsize),de ;высота            call   gmxscroll  ;выключим скрол			call detectPic ;определить тип картинки			push af ;сохранить флаг			;печать инфо 			ld de,mesfInfoF ;перенести инфо о формате			ld bc,25			ldir			ld hl,(vsize)			call toDecimal			ld hl,decimalS+2 ;о ширине			ld de,mesfInfoW			ld bc,3			ldir			ld hl,(hsize)			call toDecimal			ld hl,decimalS+2 ;о высоте			ld de,mesfInfoH			ld bc,3			ldir			call    printMesFI ;печать инфо						pop af			            ; ld      hl,viewe            ; push    hl ;подготовим возврат						or a			jr nz,viewnUnk								ld a,(FlagInfo)			or a			ld a,0			ld (FlagInfo),a			jr nz,viewnE ;пропустить показ если нужна только инфо о файле			jp (ix) ;переход на нужный конвертор						viewnUnk			            ;если неизвестный формат;            pop     hl            ;call    cls            ld      hl,mesunkn            call    print			ld      hl,mesPressAKey            call    print            call    gmxscroffviewnE            halt ;сначала ждём отпускания клавиши			ld      a,(23556) ;сист. переменная нажатая клавиша			cp		255 ;ничего не нажато			jr      nz, viewnE            retdetectPic            ;определим тип картинки            ;сначала загрузить заголовок            call    loadpic2viewn01     ;профи  8 0 0 mono            ld      a,(loadadr+4)            cp      #08 ;число в заголовке            jr      nz,viewn02            ld      a,(loadadr+5)            cp      #00            jr      nz,viewn02            ld      a,(loadadr+9)            cp      #00            jr      nz,viewn02			ld 		de,(loadadr2+0)			ld	    (vsize),de ;ширина			ld 		de,(loadadr2+2)					ld	    (hsize),de ;высота			ld 		hl,formatProfiMono ;название формата            ld      ix,vprf800 ;адрес перехода			xor 	a ;флаг что формат известный			retviewn02     ;профи  4 0 0 (16c)            ld      a,(loadadr+4)            cp      #04            jr      nz,viewn03            ld      a,(loadadr+5)            cp      #00            jr      nz,viewn03            ld      a,(loadadr+9)            cp      #00            jr      nz,viewn03			ld 		de,(loadadr2+0)			ld	    (vsize),de ;ширина			ld 		de,(loadadr2+2)					ld	    (hsize),de ;высота			ld		hl,formatGRFProfi16c            ld      ix,vprf400			xor 	a			retviewn03     ;профи  4 0 13 (256c)            ld      a,(loadadr+4)            cp      #04            jr      nz,viewn04            ld      a,(loadadr+5)            cp      #00            jr      nz,viewn04            ld      a,(loadadr+9)            cp      #13            jr      nz,viewn04			ld 		de,(loadadr2+0)			ld	    (vsize),de ;ширина			ld 		de,(loadadr2+2)					ld	    (hsize),de ;высота			ld		hl,formatGRFProfi256c            ld      ix,vprf4013			xor 	a			retviewn04     ;АТМ            ld      a,(loadadr+4)            cp      "0"            jr      c,viewn05            cp      "4"            jr      nc,viewn05            ld      a,(loadadr+5)            cp      "4"            jr      nc,viewn05            ld      a,(loadadr+9)            cp      "0"            jr      c,viewn05			ld      a,(loadadr+#82)			ld 		l,a			ld		h,0			add		hl,hl			add		hl,hl				add		hl,hl						ld	    (vsize),hl ;ширина			ld      a,(loadadr+#83)			ld 		e,a			ld		d,0					ld	    (hsize),de ;высота			ld		hl,formatGRFBLKATM64c            ld      ix,vatm			xor 	a			retviewn05     ;GMX 0f 16128            ld      hl,(#5ce8) ;длина            xor     a            cp      l            jr      nz,viewn06            ld      a,#3f            cp      h            jr      nz,viewn06	            ld      a,(loadadr+3)            cp      #0f ;цифра в заголовке			jr      nz,viewn06			ld 		de,160			ld	   (vsize),de ;ширина			ld 		de,200						ld	   (hsize),de ;высота			ld		hl,formatGMX0f			ld      ix,vgmx0f				xor 	a			retviewn06     ;мультиколор 12288 .mlt            ld      hl,(#5ce8) ;длина            xor     a            cp      l            jr      nz,viewn07            ld      a,#30            cp      h            jr      nz,viewn07			ld      a,(ix+10)			cp		"t" ;буква в расширении			jr      nz,viewn07			ld 		de,256			ld	   (vsize),de ;ширина			ld 		de,192						ld	   (hsize),de ;высота			ld		hl,formatMC12288mlt            ld      ix,vzxm12288mlt			xor 	a			retviewn07     ;стандартный экран ZX 6912            ld      hl,(#5ce8) ;длина            xor     a            cp      l            jr      nz,viewn08            ld      a,#1b            cp      h            jr      nz,viewn08			ld 		de,256			ld	   (vsize),de ;ширина			ld 		de,192						ld	   (hsize),de ;высота			ld		hl,formatZX6912            ld      ix,vzx1			xor 	a			retviewn08     ;стандартный экран ZX 6144            ld      hl,(#5ce8) ;длина            xor     a            cp      l            jr      nz,viewn09            ld      a,#18            cp      h            jr      nz,viewn09			ld 		de,256			ld	   (vsize),de ;ширина			ld 		de,192						ld	   (hsize),de ;высота			ld		hl,formatZX6144            ld      ix,vzx2			xor 	a			retviewn09     ;стандартный экран ZX 6913            ld      hl,(#5ce8) ;длина            xor     a            inc     a            cp      l            jr      nz,viewn10            ld      a,#1b            cp      h            jr      nz,viewn10			ld 		de,256			ld	   (vsize),de ;ширина			ld 		de,192						ld	   (hsize),de ;высота			ld		hl,formatZX6913            ld      ix,vzx3			xor 	a			retviewn10     ;шрифт 2048            ld      hl,(#5ce8) ;длина            xor     a            cp      l            jr      nz,viewn11            ld      a,#08            cp      h            jr      nz,viewn11			ld		hl,formatFont2048            ld      ix,vfnt			xor 	a			retviewn11    ;мультиколор 12288 .mc            ld      hl,(#5ce8) ;длина            xor     a            cp      l            jr      nz,viewn12            ld      a,#30            cp      h            jr      nz,viewn12			ld 		de,256			ld	   (vsize),de ;ширина			ld 		de,192						ld	   (hsize),de ;высота			ld		hl,formatMC12288mc            ld      ix,vzxm12288mc			xor 	a			ret			viewn12			            ;если картинка экран GMX            ld      hl,(#5ce8) ;длина             xor     a            cp      l            jr      nz,viewn13            ld      a,#80            cp      h            jr      nz,viewn13			ld 		de,640			ld	   (vsize),de ;ширина			ld 		de,200						ld	   (hsize),de ;высота			ld		hl,formatGMX            ld      ix,vgmx			xor 	a			retviewn13     ;мультиколор 9216            ld      hl,(#5ce8) ;длина            xor     a            cp      l            jr      nz,viewn14            ld      a,#24            cp      h            jr      nz,viewn14				ld 		de,256			ld	   (vsize),de ;ширина			ld 		de,192						ld	   (hsize),de ;высота			ld		hl,formatMC9216			ld      ix,vzxm9216			xor 	a			retviewn14     ;мультиколор 24576 .mcx            ld      hl,(#5ce8) ;длина            xor     a            cp      l            jr      nz,viewn99            ld      a,#60            cp      h            jr      nz,viewn99				ld 		de,256			ld	   (vsize),de ;ширина			ld 		de,192						ld	   (hsize),de ;высота			ld 		hl,formatMC24576			ld		ix,vzxm24576			xor 	a			ret			viewn99 ;неизвестный формат			ld hl,formatUnknown			xor 	a			dec		a ;флаг =255			ret;названия форматов	formatUnknown db "Unknown",0	formatGMX db "GMX",0formatGMX0f db "GMX #0f",0formatProfiMono db "GRF Profi mono",0formatGRFProfi16c db "GRF Profi 16c",0formatGRFProfi256c db "GRF Profi 256c",0formatGRFBLKATM64c db "GRF (BLK) ATM 64c",0formatZX6144 db "ZX w/o attributes",0formatZX6912 db "ZX standart",0formatZX6913 db "ZX + border",0formatFont2048 db "Font",0formatMC9216 db "Multicolor .ifl",0formatMC12288mc db "Multicolor .mc",0formatMC12288mlt db "Multicolor .mlt",0formatMC24576 db "Multicolor .mcx",0; viewe     ;выход в режим просмотра            ; ;call   gmxscron   ;вкл.чим "кран            ; call   arrowdf            ; retarrowdf   ;стрелка вниз            ld      a,(allpicpag)            cp      3            ret     c            halt            call    arrowdon            call    arrowdp            call    arrowdoff            call    arrowdp            call    arrowdon            call    arrowdp            call    arrowdoff            retarrowdp            ld      a,10arrowdp1            halt            dec     a            jr      nz,arrowdp1            retarrowdon            call    gmxpagon            ld      hl,#8000+#39a5            ld      de,arrowd+48+48            call    arrowdf1            ld      de,#8000+#39a5            ld      hl,arrowd            call    arrowdf2            call    gmxatron            ld      hl,#8000+#39a5            ld      de,arrowd+48+48+48            call    arrowdf1            ld      de,#8000+#39a5            ld      hl,arrowd+48            call    arrowdf2            call    gmxpagoff            retarrowdoff            call    gmxpagon            ld      de,#8000+#39a5            ld      hl,arrowd+48+48            call    arrowdf2            call    gmxatron            ld      de,#8000+#39a5            ld      hl,arrowd+48+48+48            call    arrowdf2            call    gmxpagoff            retarrowdf1            ld      a,8arrowdf11            ld      bc,6            ldir            ld      bc,80-6            add     hl,bc            dec     a            jr      nz,arrowdf11            retarrowdf2            ld      a,8arrowdf21            ld      bc,6            ldir            ld      bc,80-6            push    hl            ld      h,d            ld      l,e            add     hl,bc            ld      d,h            ld      e,l            pop     hl            dec     a            jr      nz,arrowdf21            retwaitv ;view mode wait key ;цикл ожидания клавиши в режиме просмотра            ; halt ;сначала ждём отпускания клавиши			; ld      a,(23556) ;сист. переменная нажатая клавиша			; cp		255 ;ничего не нажато			; jr      nz, waitvwaitv1 ;цикл ожидания в режиме просмотра			ld 		a,(FlagFlic)			or		a			jr		nz,waitvFlic ;в режим мерцания если надо            halt			ld      a,(23556) ;сист. переменная нажатая клавиша			cp		255 ;ничего не нажато			jr      z, waitv1			jr		waitvFlic1			waitvFlic			halt            call    gmxscron			halt            call    gmxscron2						ld      a,(23556) ;сист. переменная нажатая клавиша			cp		255 ;ничего не нажато			jr      z, waitv1waitvFlic1            ; cp 		#20            ; jp      z,exitv ;пробел            ; cp 		#0d            ; jp      z,exitv ;Enter			            cp 		#35            jp      z,leftv            cp 		#38            jp      z,rightv            cp 		#36            jp      z,downv            cp 		#37            jp      z,upv            cp 		"M"			jr      z,black_color            cp 		"S"			jp      z,slidesh		            jp      exitv ;любая другая клавиша выход												black_color ;переход на ч.б или обратно цветной			ld      a,(fcolorOff)            or      a            jr      z,blackwhite			jr 		colorv			blackwhite  ;make black-white            ld      a,(fcolor)            or      a			jr      nz,waitv            ld      a,(allpicpag) ;всего старниц            rrca            or      a            jp      z,waitv            ld      b,a            ld      a,firstpag            ;цикл сохраним атрибутыblackwhite1            inc     a            push    bc            push    af            call    pag_on            ;переносим            ld      hl,#c000            ld      de,#8000            ld      bc,16000            ldir            ;чистим            ld      hl,#c000            ld      de,#c001            ld      a,7  ;color b&w            ld      (hl),a            ld      bc,16000            ldir            ld      a,(allpicpag)            ld      b,a            pop     af            push    af            add     a,b            call    pag_on            ;переносим            ld      hl,#8000            ld      de,#c000            ld      bc,16000            ldir            pop     af            pop     bc            inc     a            djnz    blackwhite1            call    showpic            ;переменные            ld     hl,#c000            ld     (curhl),hl            ld     de,#8000            ld     (curde),de            ld     de,#0000            ld     (curscrl),de ;скрол            ld     (curvposit),de ;позиция            call   gmxscroll  ;выкл.чим скрол            ld      a,1     ;флаг            ld      (fcolor),a			ld      (fcolorOff),a            jp      waitvcolorv   ;make color            ld      a,(fcolor)            or      a            jp      z,waitv            ld      a,(allpicpag) ;всего старниц            rrca            or      a            jp      z,waitv            ld      b,a            ld      a,firstpag            ;цикл сохраним атрибутыcolorv1            inc     a            push    bc            push    af            ld      a,(allpicpag)            ld      b,a            pop     af            push    af            add     a,b            call    pag_on            ;переносим            ld      hl,#c000            ld      de,#8000            ld      bc,16000            ldir            pop     af            push    af            call    pag_on            ;переносим            ld      hl,#8000            ld      de,#c000            ld      bc,16000            ldir            pop     af            pop     bc            inc     a            djnz    colorv1            call    showpic            ;переменные            ld     hl,#c000            ld     (curhl),hl            ld     de,#8000            ld     (curde),de            ld     de,#0000            ld     (curscrl),de ;скрол            ld     (curvposit),de ;позиция            call   gmxscroll  ;выкл.чим скрол            xor    a     ;флаг            ld     (fcolor),a            ld     (fcolorOff),a            jp      waitvleftv            ld     a,(curfile)            or     a            jp     z,waitv            dec    a            ld     (curfile),a         ;   call   viewgmx         ;   call   gmxscron            jp      viewrightv            ld     a,(files)            ld     c,a            ld     a,(curfile)            inc    a            cp     c            jp     nc,waitv            ld     (curfile),a          ;  call   viewgmx          ;  call   gmxscron            jp     viewupv  ; прокрутка вниз в режиме просмотра            ld      a,(allpicpag)            cp      3            jp      c,waitv  ;выход если всего одна страница            ;определим не достигли верха            ld      hl,(curvposit)            ld      a,h            or      l            jp      z,waitv          ;  определим страницу памяти          ;  ld     hl,(curvposit)            ld     de,200 ;высота "крана            ld     a,255upv23            inc    a            and    a            sbc    hl,de            jr     z,upv24            jr     nc,upv23upv24            add    a,a     ;2 pag on pic            add    a,firstpag  ;first pag            push   af            ld     hl,(curscrl)            ld     de,shiftstep   ;one row            ;проверка не замкнулся ли круг            and    a            sbc    hl,de            jr     nc,upv03            ld     hl,16000-shiftstepupv03            ld     (curscrl),hl            ld     d,h            ld     e,l            call   gmxscroll            ;проверка на конец страницы памяти            ld     hl,(curhl)            ld     de,(curde)            push   hl            ld     bc,#c000+shiftstep            and    a            sbc    hl,bc            pop    hl            jr     nc,upv02            ld     hl,#c000+16000 ;сначала            ld     de,#8000+16000upv02            ld     (curhl),hl            ld     (curde),de            ;переносим строчку            pop    af            push   af            call   pag_on            call   gmxpagon            ld     hl,(curhl) ;copy pic            ld     de,(curde)            ld     bc,shiftstep    ;one row            dec    hl  ;коррекция            dec    de            lddr            pop    af       ;     push   af            inc    a            call   pag_on            call   gmxatron            ld     hl,(curhl) ;copy atr            ld     de,(curde)            ld     bc,shiftstep    ;one row            dec    hl            dec    de            lddr            inc    hl            inc    de            ld     (curhl),hl            ld     (curde),de       ;     pop    af            ;при,авим а,сол.тну. позици.            ld     hl,(curvposit)            ld     de,shiftstepr   ;шаг            and    a            sbc    hl,de            ld     (curvposit),hl            ;вернем страницы            xor    a            call   pag_on            call   gmxpagoff            jp      waitvdownv ; прокрутка вниз в режиме просмотра            ld      a,(allpicpag)            cp      3            jp      c,waitv  ;выход если всего одна страница            ;определим не достигли низа            ld      de,(curvposit)            ld      hl,200 ;высота экрана            add     hl,de            ld      d,h            ld      e,l            ld      hl,(vsize)            and     a            sbc     hl,de            jp      z,waitv            jp      c,waitv  ;выход если уже внизу          ;  определим страницу памяти            ld     hl,(curvposit)            ld     de,200 ;высота экрана            ld     a,255downv23            inc    a            and    a            sbc    hl,de            jr     nc,downv23            add    a,a     ;2 pag on pic            add    a,firstpag+2  ;first pag            push   af            ld     hl,(curscrl)            ld     de,shiftstep   ;one row            add    hl,de            ;проверка не замкнулся ли круг            push   hl            ld     de,16000            and    a            sbc    hl,de            pop    hl            jr     c,downv03            ld     hl,#0000downv03            ld     (curscrl),hl            ld     d,h            ld     e,l            call   gmxscroll            ;проверка на конец страницы памяти            ld     hl,(curhl)            ld     de,(curde)            push   hl            ld     bc,#c000+16000            and    a            sbc    hl,bc            pop    hl            jr     c,downv02            ld     hl,#c000 ;сначала            ld     de,#8000downv02            ld     (curhl),hl            ld     (curde),de            pop    af            push   af            call   pag_on            call   gmxpagon            ld     hl,(curhl) ;copy pic            ld     de,(curde)            ld     bc,shiftstep    ;one row            ldir            pop    af       ;     push   af            inc    a            call   pag_on            call   gmxatron            ld     hl,(curhl) ;copy atr            ld     de,(curde)            ld     bc,shiftstep    ;one row            ldir            ld     (curhl),hl            ld     (curde),de       ;     pop    af            ;прибавим абсолютную позицию            ld     hl,(curvposit)            ld     de,shiftstepr   ;шаг            add    hl,de            ld     (curvposit),hl            ;вернем страницы            xor    a            call   pag_on            call   gmxpagoff            jp      waitvexitv   ;exit in cat mode ;выход в режим каталога			halt			ld      a,(23556) ;сист. переменная нажатая клавиша            cp 		#ff			jr 		nz,exitv ;ждём пока отпустят клавишу            call    cls            ld      hl,title            call    print            call    printcat            call    gmxscroff            call    gmxpagoff            jp      waitcls     ;clean screen            ld      hl,#4000            ld      de,#4001            ld      bc,#1800            xor     a            ld      (hl),a            ldir            ld      a,(colorall)            ld      (hl),a            ld      bc,#300-1            ldir            xor     a            out     (#fe),a            ret;loadpic   ;load pic in pag 0            ; call    cls            ; ld      hl,meswait            ; call    print            ; call    printMesFI            ; call    gmxscroff            ; ld     a,(curfile)            ; ld     hl,cat            ; or     a            ; jr     z,loadp01			; ld     bc,lenghtName  ;one name; loadp02  ;find name file            ; add    hl,bc            ; dec    a            ; jr    nz,loadp02; loadp01            ; ld     a,0        ;0 page            ; call   pag_on            ; call   gmxpagoff            ; call   readfile            ; retloadpic2   ;начало загрузки картинки по секторам            call    cls            ld      hl,meswait            call    print            ;call    printMesFI            call    gmxscroff            ld      a,(curfile) ;текущий файл            ld      bc,cat ;оригинальный каталог			ld      l,a			ld 		h,0            add    hl,hl ;2			add    hl,hl ;4			add    hl,hl ;8			add    hl,hl ;16			add hl,bc	            xor     a        ;0 page            call    pag_on            call    gmxpagoff            call    readfile2  ;считать первый сектор            retslidesh   ;slide show            ld     a,(files)            or     a      ;no files?            jp     z,wait ;на выходslidesh03            call   viewsl ;показать текущий            ld     e,150  ;пауза при слайдшоуslidesh01			ld 		a,(FlagFlic)			or		a			jr		nz,slideshFlic ;в режим мерцания если надо            halt			ld      a,(23556) ;сист. переменная нажатая клавиша			cp		255 ;ничего не нажато			jr      nz,exitv			jr		slideshFlic1slideshFlic			halt            call    gmxscron			dec		e ;коррекция паузы			halt            call    gmxscron2						ld      a,(23556) ;сист. переменная нажатая клавиша			cp		255 ;ничего не нажато			jp      nz,exitvslideshFlic1			dec		e            jr		nz,slidesh01            ld     a,(files)  ;next            ld     c,a			ld     a,(shiftcat)			ld     b,a 	            ld     a,(curfile)            inc    a            cp     c            jr     c,slidesh04            xor    a ;в начало каталога			ld		(shiftcat),a ;свдиг тоже			ld		b,aslidesh04            ld     (curfile),a						sub b            cp     24 ;не пора ли сдвинуться вниз всему каталогу            jr     c,slidesh05            inc 	b            ld   	a,b            ld     (shiftcat),aslidesh05            jp     slidesh03printcat            ld      hl,#5800            xor		aclscat            ld      d,h            ld      e,l            inc     de            ld      c,a  ;keep            ld      a,(shiftcat)            ld      b,a            ld      a,(curfile)            and     a            sbc     a,b            cp      c            ld      (cursor),a ;posit            ld      a,(colorcat)            jr      nz,clscat01            ld      a,(colorcatc) ;markclscat01            ld      (hl),a  ;раскраска атрибутами            ld      a,c  ;restor            ld      bc,9            ldir            ld      bc,32-9            add     hl,bc            inc     a            cp      24            jr      c,clscat       ;     ld      hl,catposit       ;     call    print            ld      bc,cat  ;теперь печать имён файлов            ld      a,(shiftcat)            ;or      a            ; jr      z,printcat00			ld      l,a			ld 		h,0;printcat01  ;find name file            add    hl,hl ;2			add    hl,hl ;4			add    hl,hl ;8			add    hl,hl ;16			add hl,bc			            ;dec    a            ;jr    nz,printcat01;printcat00            xor     aprintcat02            push    af            push    hl                       ;print 24 row            ld      (catposit+1),a            ld      hl,catposit ;установим позицию печати            call    print            pop     hl            push    hl			call 	formatName ;подготовим            call    print ;печать одного имени файла            ;ld      hl,catspace            ;call    print            pop     hl            ld      bc,lenghtName ;на след. имя            add     hl,bc            pop     af            inc     a            cp      24            jr      c,printcat02formatName ;подготавливает имя файла для печати в каталоге, на выходе адрес в HL            ld      de,catFName ;здесь временное имя файла            ld      bc,8   ;name 8 sym            ldir			ld		a," " ;добавим пробел перед расширением			ld		(de),a				inc		de			ld 		a,(hl) ;если это строчная буква, то расширение 3 символа			ldi			;перенесём первую букву расширения			cp 		"a"			jr 		c,formatName05			ld 		a,(hl)		;перенесём ещё две буквы			or		a			jr		nz,formatName021			ld		a," " ;если нули, то забъём пробеламиformatName021			ld		(de),a			inc		hl			inc 	de						ld 		a,(hl)				or		a			jr		nz,formatName022			ld		a," " formatName022			ld		(de),a			inc		hl			inc 	de						jr		formatName06formatName05 ;иначе забъём пробелами			inc		hl			inc		hl			ld		a," "			ld 		(de),a			inc 	de			ld		(de),a			inc 	deformatName06            xor		a            ld      (de),a ;marker end line			ld 		hl,catFName			ret; readfile    ;считывает файл целиком            ; ld      c,#13 ;move file info to syst var            ; call    #3d13            ; ld      c,#0a ;find file            ; call    #3d13            ; ld      a,c            ; ld      c,#08 ;read file title            ; call    #3d13            ; ld      hl,loadadr ;to            ; ld      de,(#5ceb)            ; ld      a,(#5cea)            ; ld      b,a   ;sectors            ; ld      c,5 ;read            ; call    #3d13            ; retmarkdrive ; mark current drive            ld      a,(colorall)            ld      (#5800+128+24),a            ld      (#5800+128+25),a            ld      (#5800+128+27),a            ld      (#5800+128+28),a            ld      a,(#5d19)            cp      0            jr      nz,mark00            ld      a,(colord)            ld      (#5800+128+24),amark00            cp      1            jr      nz,mark01            ld      a,(colord)            ld      (#5800+128+25),amark01            cp      2            jr      nz,mark02            ld      a,(colord)            ld      (#5800+128+27),amark02            cp      3            jr      nz,mark03            ld      a,(colord)            ld      (#5800+128+28),amark03            ret					readcat ;чтение каталога            ld      hl,cat ;to            ld      de,#0000 ;0 trk 0 sec            ld      b,9      ;9 sect            ld      c,5 ;read            call    #3d13            ld      hl,cat+2048+#e4;            ld      a,(hl) ;total files			ld      (files),a ;всего файлов на диске            or      a            ret     z  ;exit if no fales            ; ld      c,a            ; ld      a,128            ; sub     c            ; ld      (catend),a ;fill end cat            ;ld      a,c            call    markdrive            ret						readfile2   ;считывает 1 сектор и оставляет координаты на начало файла            ld      c,#13 ;move file info to syst var            call    #3d13            ld      c,#0a ;find file            call    #3d13            ld      a,c            ld      c,#08 ;read file title            call    #3d13            ld      hl,loadadr ;куда            ld      de,(#5ceb) ;начало файла сектор дорожка            ld      (fcurtrk),de            ld      a,(#5cea)            ld      (fleftsec),a ;длина в секторах            or      a            ret     z    ;выход если пустой            ld      b,1  ;загрузим один сектор            ld      c,5 ;read            call    #3d13            ld      de,(fcurtrk) ;текущие сектор дорожка            ld      (#5cf4),de ;восстановим            retreadfile2n  ;считывает следующие 64 сектора            ld      a,(fleftsec) ;осталось в секторах            or      a            ret     z    ;выход если конец файла            ;считаем сколько осталось            cp      65            jr      c,readfile2n1            ld      a,64  ;64 сектораreadfile2n1            ld      b,a            ld      a,(fleftsec)            sub     b ;уменьшим количество оставшишся секторов            ld      (fleftsec),a            ld      hl,loadadr ;куда            ld      de,(#5cf4) ;текущие сектор доро:ка            ld      c,5 ;read            call    #3d13            ld      a,(fleftsec)            or      a            ret     z ;кончился файл            ;или вернемся на сектор назад            inc     a            ld      (fleftsec),a            ld      de,(#5cf4)            ld      a,e            or      a            jr      nz,readfile2n2            ld      e,16            dec     dreadfile2n2            dec     e            ld      (#5cf4),de            retclearpag   ;очистка 2х страниц памяти #c000           ;вход (curpicpag) - текущая страница           ;на выходе вкл.чена страница (curpicpag)            ld      a,(curpicpag)            call    pag_on            ld      hl,#c000            ld      de,#c001            xor     a            ld      (hl),a            ld      bc,16000            ldir            ld      a,(curpicpag)            inc     a   ;следующая            call    pag_on            ld      hl,#c000            ld      de,#c001            ld      a,7  ;цвет            ld      (hl),a            ld      bc,16000            ldir            ld      a,(curpicpag)            call    pag_on            ret;процедура вывода картинки из памятиshowpic            ld      a,firstpag ;первая страница            ld      (curpicpag),a            call    pag_on   ;вкл.чить            call    gmxpagon ;вкл.чить страницу видео            ld      hl,#c000 ;переносим            ld      de,#8000            ld      bc,16000            ldir            ld      a,(curpicpag) ;текущая страница            inc     a            ld      (curpicpag),a            call    pag_on            call    gmxatron            ld      hl,#c000            ld      de,#8000            ld      bc,16000            ldir            xor     a            call    pag_on ;вернем обычные страницы            call    gmxpagoff            call    gmxscron            ret;процедура вывода картинки из памяти с чередованием экрановshowpicFlic            ld      a,firstpag ;первая страница            ld      (curpicpag),a            call    pag_on   ;вкл.чить            call    gmxpagon ;вкл.чить страницу видео            ld      hl,#c000 ;переносим            ld      de,#8000            ld      bc,16000            ldir            ld      a,(curpicpag) ;текущая страница            inc     a            ld      (curpicpag),a            call    pag_on            call    gmxatron            ld      hl,#c000            ld      de,#8000            ld      bc,16000            ldir			            ld      a,(curpicpag) ;текущая страница            inc     a            ld      (curpicpag),a            call    pag_on   ;вкл.чить            call    gmxpagon2 ;вкл.чить страницу видео            ld      hl,#c000 ;переносим            ld      de,#8000            ld      bc,16000            ldir            ld      a,(curpicpag) ;текущая страница            inc     a            ld      (curpicpag),a            call    pag_on            call    gmxatron2            ld      hl,#c000            ld      de,#8000            ld      bc,16000            ldir			            xor     a            call    pag_on ;вернем обычные страницы            call    gmxpagoff			ret			;цикл мерцанияgmxpagon            ld      bc,#78fd            ld      a,#3b  ;39            out     (c),a            retgmxatron            ld      bc,#78fd            ld      a,#7b  ;79            out     (c),a            retgmxpagon2 ;второй экран пиксели            ld      bc,#78fd            ld      a,#39  ;3b            out     (c),a            retgmxatron2 ;второй экран атрибуты            ld      bc,#78fd            ld      a,#79  ;7b            out     (c),a            ret									gmxpagoff            ld      bc,#78fd            ld      a,#00  ;02            out     (c),a            retgmxscron            ld      bc,#7efd            ld      a,#c8            out     (c),a            ld      bc,#7ffd            ld      a,#10    ;5 screen            out     (c),a            ret			gmxscron2            ld      bc,#7efd            ld      a,#c8            out     (c),a            ld      bc,#7ffd            ld      a,#18    ;7 screen            out     (c),a            retgmxscroff            ld      bc,#7efd            ld      a,#c0            out     (c),a            ld      bc,#7ffd            ld      a,#10    ;5 screen            out     (c),a            retgmxscroll  ;in de-shift (0-15999)            ld      bc,#7afd            ld      a,e            out     (c),a            ld      bc,#7cfd            ld      a,d            out     (c),a            retcurscrl     dw      0 ;current scroll;печать до символа 0;hl - text address;13-enter;16-color(атрибуты 128+64+pap*8+ink);20-inverse;21-отступ от левого края;22-atprint_  ;var 2: print text lenght in bc        ld      a,(hl)        call    prsym        inc     hl        dec     bc        ld      a,b        or      c        jr      nz,print_        retaupr    pop     hl        call    print        push    hl        ret;start print to 0print   ld      a,(hl)        inc     hl        or      a        ret     z        cp      23        jr      c,prin        call    prsym        jr      printprin        cp      13        jr      nz,prin0        ld      a,(space)        ld      (xtxt),a        ld      a,(ytxt)        inc     a        cp      23        jr      c,pr13_0        xor     apr13_0  ld      (ytxt),a        jr      printprin0   cp      16        jr      nz,prin1        ld      a,(hl)        inc     hl        ld      (23695),a        jr      printprin1   cp      20        jr      nz,prin2        ld      a,(hl)        inc     hl        or      a        jr      z,pr20_0        ld      a,#2f        ld      (pr0),a        ld      (pr1),a        ld      (pr2),a        ld      (pr3),a        jr      printpr20_0  ld      (pr0),a        ld      (pr1),a        ld      (pr2),a        ld      (pr3),a        jr      printprin2   cp      22        jr      nz,prin3        ld      a,(hl)        ld      (ytxt),a        inc     hl        ld      a,(hl)        ld      (xtxt),a        inc     hl        jr      printprin3   cp      21        jr      nz,print        ld      a,(hl)        inc     hl        ld      (space),a        jr      printprsym        push    af        push    bc        push    de        push    hl        push    ix        ld      de,(ytxt)        inc     d        ld      (ytxt),de        dec     d        ex      af,af'        ld      a,d        cp      41        jr      c,prs        ld      a,e        inc     a        cp      24        jr      c,prs1        xor     aprs1    ld      (ytxt),a        ld      a,(space)        ld      (xtxt),aprs     ex      af,af'        ld      l,a        ld      h,#00        add     hl,hl        add     hl,hl        add     hl,hl        ld      bc,font        add     hl,bc        push    hl        ld      a,d        add     a,a        ld      d,a        add     a,a        add     a,d        add     a,#02        ld      d,a        and     #07        ex      af,af'        ld      a,d        rrca        rrca        rrca        and     #1F        ld      d,a        ld      a,e        and     #18        add     a,#40        ld      h,a        ld      a,e        and     #07        rrca        rrca        rrca        add     a,d        ld      l,a        ld      (posit),hl        pop     de        ld      b,#08        ex      af,af'        jr      z,L73C7        ld      xh,b        cp      #02        jr      z,L73D6        cp      #04        jr      z,L73E9L73A7   ld      a,(hl)        rrca        rrca        ld      b,a        inc     hl        ld      a,(hl)        and     #0F        ld      c,a        ld      a,(de)pr0     nop        and     #FC        sla     a        rl      b        sla     a        rl      b        or      c        ld      (hl),a        dec     hl        ld      (hl),b        inc     h        inc     de        dec     xh        jr      nz,L73A7        jr      prsc1L73C7   ld      a,(hl)        and     #03        ld      c,a        ld      a,(de)pr1     nop        and     #FC        or      c        ld      (hl),a        inc     h        inc     de        djnz    L73C7        jr      prscL73D6   ld      a,(hl)        and     #C0        ld      b,a        ld      a,(de)pr2     nop        and     #FC        rrca        rrca        or      b        ld      (hl),a        inc     h        inc     de        dec     xh        jr      nz,L73D6        jr      prscL73E9   ld      a,(hl)        rrca        rrca        rrca        rrca        ld      b,a        inc     hl        ld      a,(hl)        and     #3F        ld      c,a        ld      a,(de)pr3     nop        and     #FC        sla     a        rl      b        sla     a        rl      b        sla     a        rl      b        sla     a        rl      b        or      c        ld      (hl),a        dec     hl        ld      (hl),b        inc     h        inc     de        dec     xh        jr      nz,L73E9        jr      prsc1prsc    ld      hl,(posit)        ld      a,h        and     #18        rrca        rrca        rrca        add     a,#58+#80        ld      h,a        ld      a,(23695)        ld      (hl),a        jr      prseprsc1   ld      hl,(posit)        ld      a,h        and     #18        rrca        rrca        rrca        add     a,#58+#80        ld      h,a        ld      a,(23695)        ld      (hl),a        inc     hl        ld      (hl),aprse    pop     ix        pop     hl        pop     de        pop     bc        pop     af        retposit   dw      0space   nopytxt    nopxtxt    nopprintFI ;печать инфо о текущем файле в режиме каталога			ld 		a,(curfile)			ld 		bc,cat			ld      l,a			ld 		h,0            add    hl,hl ;2			add    hl,hl ;4			add    hl,hl ;8			add    hl,hl ;16			add hl,bc				push hl ;запомним указатель на имя файла в каталоге			call    formatName			ld		hl,catFName			ld 		de,fInfoN ;перенос имени			ld		bc,12 ;lenghtName			ldir			;сформируем инфу о длине файла			pop		hl			ld		de,11			add     hl,de			ld e,(hl) ;размер файла			inc 	hl			ld d,(hl)			ex		de,hl			call 	toDecimal ;сформируем длину файла			ld		hl,decimalS			ld 		de,fInfoL ;перенос имени			ld		bc,5 ;lenghtName			ldir					;сформируем инфу о номере файла			ld a,(curfile)			inc a			ld l,a			ld a,(files)			or a			jr nz,printFI2			dec l ;если нет файлов, покажем что текущий файл тоже 0йprintFI2			ld h,0			call 	toDecimal ;			ld		hl,decimalS+2			ld 		de,fInfoP ;			ld		bc,3 ;			ldir			;сформируем инфу о количестве файлов всего			ld a,(files)			ld l,a			ld h,0			call 	toDecimal ;			ld		hl,decimalS+2			ld 		de,fInfoP+4 ;			ld		bc,3 ;			ldir			            ld      hl,titleFI            call    print			ret			printMesFI ;печать инфо о текущем файле в режиме просмотра			ld 		a,(curfile)			ld 		bc,cat			ld      l,a			ld 		h,0            add    hl,hl ;2			add    hl,hl ;4			add    hl,hl ;8			add    hl,hl ;16			add hl,bc				push hl ;запомним указатель на имя файла в каталоге			call    formatName			ld		hl,catFName			ld 		de,mesfInfoN ;перенос имени			ld		bc,12 ;lenghtName			ldir			;сформируем инфу о длине файла			pop		hl			ld		de,11			add     hl,de			ld e,(hl) ;размер файла			inc 	hl			ld d,(hl)			ex		de,hl			call 	toDecimal ;сформируем длину файла			ld		hl,decimalS			ld 		de,mesfInfoL ;перенос имени			ld		bc,5 ;lenghtName			ldir					;сформируем инфу о номере файла			ld a,(curfile)			inc a			ld l,a			ld h,0			call 	toDecimal ;			ld		hl,decimalS+2			ld 		de,mesfInfoP ;			ld		bc,3 ;			ldir			;сформируем инфу о количестве файлов всего			ld a,(files)			ld l,a			ld h,0			call 	toDecimal ;			ld		hl,decimalS+2			ld 		de,mesfInfoP+4 ;			ld		bc,3 ;			ldir			            ld      hl,mestitleFI            call    print			ret												toDecimal		;конвертирует 2 байта в 5 десятичных цифр				;на входе в HL число			ld de,10000 ;десятки тысяч			ld a,255toDecimal10k						and a			sbc hl,de			inc a			jr nc,toDecimal10k			add hl,de			add a,48			ld (decimalS),a			ld de,1000 ;тысячи			ld a,255toDecimal1k						and a			sbc hl,de			inc a			jr nc,toDecimal1k			add hl,de			add a,48			ld (decimalS+1),a			ld de,100 ;сотни			ld a,255toDecimal01k						and a			sbc hl,de			inc a			jr nc,toDecimal01k			add hl,de			add a,48			ld (decimalS+2),a			ld de,10 ;десятки			ld a,255toDecimal001k						and a			sbc hl,de			inc a			jr nc,toDecimal001k			add hl,de			add a,48			ld (decimalS+3),a			ld de,1 ;единицы			ld a,255toDecimal0001k						and a			sbc hl,de			inc a			jr nc,toDecimal0001k			add hl,de			add a,48			ld (decimalS+4),a								ret	decimalS	ds 5 ;десятичные цифры						include "vgmx.asm"            include "vp800.asm"            include "vp400.asm"            include "pag.asm"            include "vp4013.asm"            include "vatm.asm"            include "mkp256.asm"            include "zxp.asm"            include "zxa.asm"            include "vzx1.asm"            include "vzx2.asm"            include "vzx3.asm"            include "vfnt.asm"			include "vzxm24576.asm"			include "vzxm12288mc.asm"			include "vzxm12288mlt.asm"			include "vzxm9216.asm"			include "vgmx0f.asm"			include "stretchPix.asm"fcolor      db      0 ;флаг что атрибуты сохраненыfcolorOff   db      0 ;флаг что атрибуты уже обесцвеченыcurhl       dw      0 ;curde       dw      0 ;текущий адресfef2        db      0 ;флагshiftstepr equ   4 ;макс 4 шаг прокруткиshiftstep equ   4*80 ;шаг прокруткиcurvposit dw     0 ;текущая позицияmaxh     equ    1000; макс высотаfcurtrk  dw     0; текущие сектор и дорожкаfleftsec db     0; осталось секторов файлаcursor   db     0; строка курсораshiftcat db     0; сдвиг на странице каталогаshiftL   dw     0; отступ слеваshiftR   dw     0; отступ справаhsize    dw     0; гориз размерvsize    dw     0; верт размерloadadr  equ    #8000 ;адрес загрузки целиком файлаcurpicpag  db      0; текущая страницаallpicpag  db      0;  всего страниц занимаеfirstpag  equ     #0a ; первая страница памятиfinmem  db      0;  flag pic in memdrive   db      0; текущий дискfiles   db      0; всего файловcurfile db      0; номер файла под курсором;curfile2 db      0;colorcat db     1*8+7; color cat wincolorcatc db    7*8+1; color cat cur filecolord  db      1*8+7;colorall db     7files_view equ 24 ;показывать файлов в каталогеkeyRepeat db 20 ;пауза перед повтором нажатия клавишиkeyLast db 255; последняя нажатая клавишаkeyDelayF db 0 ;флаг что уже была пауза нажатияFlagInfo db 0 ;флаг что нужна только инфа о файлеFlagFlic db 0 ;флаг что картинку нужно смотреть с чередованием экранов;текст меню в режиме каталогаtitle   db      22,0,15,"GMX Pic View v1.2.2"        db      22,1,15,"for Scorpion GMX"        db      22,4,15,"1-4, A-D - drive AB  CD"        db      22,5,15,"R - read catalog"        db      22,6,15,"Cursor - select"        db      22,7,15,"Enter- view"        db      22,8,15,"S - slide show"		db      22,9,15,"I - file info"        db      22,10,15,"E - exit in DOS"        db      22,12,15,"in view mode:"        db      22,14,15,"Right, Left - select"        db      22,15,15,"Up, Down - move"        db      22,16,15,"M - b&w/color"        db      22,17,15,"S - slide show"        db      22,18,15,"Any other keys - exit"		db      22,21,15,"File:   "			db      22,22,15,"Name:   "		db      22,23,15,"Lenght: "		db      13,0		titleFI ;Секция инфо о файле в режиме каталога				db		22,21,15+8fInfoP	db		"000/000"	    db		22,22,15+8 fInfoN	ds		12 ;тут будет имя файла		db		22,23,15+8fInfoL	db		"00000"        db      13,0mestitleFI ;Секция инфо о файле в режиме просмотра				db      22,15,13,"File:   "mesfInfoP	db		"000/000"		db      22,16,13		db		"Name:   "mesfInfoN	ds		12 ;тут будет имя файла		db      22,17,13,"Lenght: " ;длинаmesfInfoL	db		"00000"		db      22,18,13,"Width:  " ;ширинаmesfInfoW	db		"000"		db      22,19,13,"Height: " ;высотаmesfInfoH	db		"000"		db      22,20,13,"Format: " ;форматmesfInfoF	ds		25        db      13,0mesnofile       db 22,0,0," no files",0meswait  db     22,11,17,"Wait...",0mesunkn  db     22,10,14,"Unknown format",0mesPressAKey db     22,11,14,"Press any key",0catposit db     22,0,0,0 ;posit;catspace db     " ",0;catend   db     0;catendf  db		"            ";пробелы для каталога;		 db		0 ;маркер конца имениcatFName  ds		13 ;имя файла для каталога		 db		0 ;маркер конца имениarrowd      insert  "gmxpv-rs.C"  ;спрайт стрелки вниз            ds      48*3palette     ds      16 ;палитра новаяpaletzx     db      192,192,192   ;палитра zx            db      192,192,0            db      0,192,192            db      0,192,0            db      192,0,192            db      192,0,0            db      0,0,192            db      0,0,0cr          db      0 ;цветаcg          db      0cb          db      0  			align 256palet256    ds      256lenghtName equ 16 ;длина имени файлв в каталоге печатиloadadr2   equ     #8000 ;буфер чтения  font 	equ #c000 ;адрес шрифта после запуска    ;catlog  equ #c000+2048  ;подготовленный для печати каталог;catlogSize equ 128*13 ;размер каталога для печатиcat     equ     #c000+2048 ;адрес каталога для считывания с дискаfontTemp    insert  "FONT.C" ;шрифт		ds 1 ;для нечётного размераend__GMXPV		SAVETRD "GMXPV.TRD",|"gmxpv.C",start_GMXPV,end__GMXPV-start_GMXPV